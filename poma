#!/bin/bash

# Poma 项目主控制脚本
# 使用方法：./poma <command>

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

show_help() {
    echo "🎧 Poma - 播客书签笔记工具"
    echo ""
    echo "用法: ./poma <command>"
    echo ""
    echo "命令:"
    echo "  start-backend    启动后端服务器"
    echo "  stop-backend     停止后端服务器" 
    echo "  build-android    构建 Android 应用"
    echo "  dev              启动开发模式 (后端 + 文档说明)"
    echo "  status          查看服务状态"
    echo "  clean           清理构建文件"
    echo "  help            显示此帮助信息"
    echo ""
    echo "示例:"
    echo "  ./poma start-backend  # 启动后端"
    echo "  ./poma build-android  # 构建 Android"
    echo "  ./poma dev           # 开发模式"
}

check_backend_status() {
    if curl -s http://localhost:8001/health > /dev/null 2>&1; then
        echo "✅ 后端服务器正在运行 (http://localhost:8001)"
    else
        echo "❌ 后端服务器未运行"
    fi
}

case "$1" in
    "start-backend"|"backend"|"start")
        echo "🚀 启动后端服务器..."
        "$SCRIPT_DIR/scripts/start-backend.sh"
        ;;
    "stop-backend"|"stop")
        echo "🛑 停止后端服务器..."
        "$SCRIPT_DIR/scripts/stop-backend.sh"
        ;;
    "build-android"|"build"|"android")
        echo "📱 构建 Android 应用..."
        "$SCRIPT_DIR/scripts/build-android.sh"
        ;;
    "dev"|"development")
        echo "🔧 启动开发模式..."
        echo "1. 启动后端服务器..."
        "$SCRIPT_DIR/scripts/start-backend.sh" &
        BACKEND_PID=$!
        
        echo "2. 等待后端启动..."
        sleep 3
        
        echo "3. 打开开发文档..."
        echo ""
        echo "📚 开发资源:"
        echo "   - 后端 API: http://localhost:8001"
        echo "   - API 文档: http://localhost:8001/docs" 
        echo "   - 开发指南: cat DEVELOPMENT.md"
        echo ""
        echo "按 Ctrl+C 停止开发模式"
        
        # 等待 Ctrl+C
        trap "echo ''; echo '停止开发模式...'; kill $BACKEND_PID 2>/dev/null; exit" INT
        wait $BACKEND_PID
        ;;
    "status")
        echo "📊 服务状态检查:"
        check_backend_status
        
        if [ -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
            APK_SIZE=$(ls -lh android/app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')
            echo "✅ Android APK 已构建 ($APK_SIZE)"
        else
            echo "❌ Android APK 未构建"
        fi
        ;;
    "clean")
        echo "🧹 清理构建文件..."
        rm -rf backend/venv/__pycache__
        rm -rf android/app/build
        rm -rf android/build
        echo "✅ 清理完成"
        ;;
    "help"|"--help"|"-h"|"")
        show_help
        ;;
    *)
        echo "❌ 未知命令: $1"
        echo ""
        show_help
        exit 1
        ;;
esac